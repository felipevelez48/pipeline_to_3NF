services:
  postgres:
    image: postgres:16-alpine
    env_file: .env.engineer
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 5s
      retries: 5
    mem_limit: 2g

  airflow:
    image: apache/airflow:2.9.1-python3.11
    depends_on:
      postgres:
        condition: service_healthy
    env_file: .env.engineer         
    environment:                    
      - _PIP_ADDITIONAL_REQUIREMENTS=ftfy ruff pytest pandera
    volumes:
      - ./dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
      - ./data:/opt/airflow/data
      - ./logs:/opt/airflow/logs
      - ./tests:/opt/airflow/tests          
      - ./models:/opt/airflow/models
    command: >
      bash -c "
      airflow db upgrade &&
      airflow users create --username admin --firstname Admin --lastname User \
                           --role Admin --email admin@example.com \
                           --password admin || true &&
      exec airflow webserver
      "
    ports:
      - "8080:8080"
    mem_limit: 2g

  airflow-scheduler:
    image: apache/airflow:2.9.1-python3.11
    depends_on:
      postgres:
        condition: service_healthy
    env_file: .env.engineer
    environment:
      - _PIP_ADDITIONAL_REQUIREMENTS=ftfy ruff pytest pandera
    volumes:
      - ./dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
      - ./data:/opt/airflow/data
      - ./logs:/opt/airflow/logs
      - ./tests:/opt/airflow/tests
      - ./models:/opt/airflow/models
    command: >
      bash -c "
      airflow db upgrade &&
      exec airflow scheduler
      "

volumes:
  pgdata:
